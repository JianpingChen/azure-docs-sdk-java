### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.createEcKey*"
fullName: "com.azure.security.keyvault.keys.KeyClient.createEcKey"
name: "createEcKey"
nameWithType: "KeyClient.createEcKey"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.createEcKey(com.azure.security.keyvault.keys.models.CreateEcKeyOptions)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.createEcKey(CreateEcKeyOptions createEcKeyOptions)"
  name: "createEcKey(CreateEcKeyOptions createEcKeyOptions)"
  nameWithType: "KeyClient.createEcKey(CreateEcKeyOptions createEcKeyOptions)"
  summary: "Creates a new Ec key and  stores it in the key vault. The create Ec key operation can be used to create any Ec\n key type in key vault. If the named key already exists, Azure Key Vault creates a new version of the key. It\n requires the <code>keys/create</code> permission.\n\n <p>The <xref uid=\"CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\">CreateEcKeyOptions</xref> parameter is required. The <xref uid=\"CreateEcKeyOptions#getCurveName()\" data-throw-if-not-resolved=\"false\">key curve</xref> can be\n optionally specified. If not specified, default value of <xref uid=\"KeyCurveName#P_256\" data-throw-if-not-resolved=\"false\">P-256</xref> is used by Azure Key\n Vault. The <xref uid=\"CreateEcKeyOptions#getExpiresOn()\" data-throw-if-not-resolved=\"false\">expires</xref> and <xref uid=\"CreateEcKeyOptions#getNotBefore()\" data-throw-if-not-resolved=\"false\">notBefore</xref>\n values are optional. The <xref uid=\"CreateEcKeyOptions#isEnabled()\" data-throw-if-not-resolved=\"false\">enabled</xref> field is set to true by Azure Key Vault, if\n not specified.</p>\n\n <p>The <xref uid=\"CreateEcKeyOptions#getKeyType()\" data-throw-if-not-resolved=\"false\">keyType</xref> indicates the type of key to create. Possible values\n include: <xref uid=\"KeyType#EC\" data-throw-if-not-resolved=\"false\">EC</xref> and <xref uid=\"KeyType#EC_HSM\" data-throw-if-not-resolved=\"false\">EC-HSM</xref>.</p>\n\n <p><strong>Code Samples</strong></p>\n <p>Creates a new EC key with P-384 web key curve. The key activates in one day and expires in one year. Prints\n out the details of the created key.</p>\n <pre>\n CreateEcKeyOptions createEcKeyOptions = new CreateEcKeyOptions&#40;&quot;keyName&quot;&#41;\n     .setCurveName&#40;KeyCurveName.P_384&#41;\n     .setNotBefore&#40;OffsetDateTime.now&#40;&#41;.plusDays&#40;1&#41;&#41;\n     .setExpiresOn&#40;OffsetDateTime.now&#40;&#41;.plusYears&#40;1&#41;&#41;;\n KeyVaultKey ecKey = keyClient.createEcKey&#40;createEcKeyOptions&#41;;\n System.out.printf&#40;&quot;Key is created with name %s and id %s %n&quot;, ecKey.getName&#40;&#41;, ecKey.getId&#40;&#41;&#41;;\n </pre>"
  parameters:
  - description: "The key options object containing information about the ec key being created."
    name: "createEcKeyOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultKey createEcKey(CreateEcKeyOptions createEcKeyOptions)"
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\">created key</xref>."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.2.0

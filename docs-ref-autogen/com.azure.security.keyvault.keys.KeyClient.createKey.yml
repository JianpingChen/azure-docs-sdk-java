### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.createKey*"
fullName: "com.azure.security.keyvault.keys.KeyClient.createKey"
name: "createKey"
nameWithType: "KeyClient.createKey"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.createKey(com.azure.security.keyvault.keys.models.CreateKeyOptions)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.createKey(CreateKeyOptions createKeyOptions)"
  name: "createKey(CreateKeyOptions createKeyOptions)"
  nameWithType: "KeyClient.createKey(CreateKeyOptions createKeyOptions)"
  summary: "Creates a new key and stores it in the key vault. The create key operation can be used to create any key type in\n key vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the\n <code>keys/create</code> permission.\n\n <p>The <xref uid=\"CreateKeyOptions\" data-throw-if-not-resolved=\"false\">CreateKeyOptions</xref> is required. The <xref uid=\"CreateKeyOptions#getExpiresOn()\" data-throw-if-not-resolved=\"false\">expires</xref> and <xref uid=\"CreateKeyOptions#getNotBefore()\" data-throw-if-not-resolved=\"false\">notBefore</xref> values are optional. The <xref uid=\"CreateKeyOptions#isEnabled()\" data-throw-if-not-resolved=\"false\">CreateKeyOptions#isEnabled()</xref> enabled} field\n is set to true by Azure Key Vault, if not specified.</p>\n\n <p>The <xref uid=\"CreateKeyOptions#getKeyType()\" data-throw-if-not-resolved=\"false\">keyType</xref> indicates the type of key to create. Possible values include:\n <xref uid=\"KeyType#EC\" data-throw-if-not-resolved=\"false\">EC</xref>, <xref uid=\"KeyType#EC_HSM\" data-throw-if-not-resolved=\"false\">EC-HSM</xref>, <xref uid=\"KeyType#RSA\" data-throw-if-not-resolved=\"false\">RSA</xref>, <xref uid=\"KeyType#RSA_HSM\" data-throw-if-not-resolved=\"false\">RSA-HSM</xref>\n and <xref uid=\"KeyType#OCT\" data-throw-if-not-resolved=\"false\">OCT</xref>.</p>\n\n <p><strong>Code Samples</strong></p>\n <p>Creates a new RSA key which activates in one day and expires in one year. Prints out the details of the\n <pre>\n CreateKeyOptions createKeyOptions = new CreateKeyOptions&#40;&quot;keyName&quot;, KeyType.RSA&#41;\n     .setNotBefore&#40;OffsetDateTime.now&#40;&#41;.plusDays&#40;1&#41;&#41;\n     .setExpiresOn&#40;OffsetDateTime.now&#40;&#41;.plusYears&#40;1&#41;&#41;;\n KeyVaultKey optionsKey = keyClient.createKey&#40;createKeyOptions&#41;;\n System.out.printf&#40;&quot;Key is created with name %s and id %s %n&quot;, optionsKey.getName&#40;&#41;, optionsKey.getId&#40;&#41;&#41;;\n </pre>"
  parameters:
  - description: "The key options object containing information about the key being created."
    name: "createKeyOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultKey createKey(CreateKeyOptions createKeyOptions)"
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\">created key</xref>."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.KeyClient.createKey(java.lang.String,com.azure.security.keyvault.keys.models.KeyType)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.createKey(String name, KeyType keyType)"
  name: "createKey(String name, KeyType keyType)"
  nameWithType: "KeyClient.createKey(String name, KeyType keyType)"
  summary: "Creates a new key and stores it in the key vault. The create key operation can be used to create any key type in\n key vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the\n <code>keys/create</code> permission.\n\n <p>The <xref uid=\"KeyType\" data-throw-if-not-resolved=\"false\">keyType</xref> indicates the type of key to create. Possible values include: <xref uid=\"KeyType#EC\" data-throw-if-not-resolved=\"false\">EC</xref>, <xref uid=\"KeyType#EC_HSM\" data-throw-if-not-resolved=\"false\">EC-HSM</xref>, <xref uid=\"KeyType#RSA\" data-throw-if-not-resolved=\"false\">RSA</xref>, <xref uid=\"KeyType#RSA_HSM\" data-throw-if-not-resolved=\"false\">RSA-HSM</xref> and <xref uid=\"KeyType#OCT\" data-throw-if-not-resolved=\"false\">OCT</xref>.</p>\n\n <p><strong>Code Samples</strong></p>\n <p>Creates a new EC key. Prints out the details of the created key.</p>\n <pre>\n KeyVaultKey key = keyClient.createKey&#40;&quot;keyName&quot;, KeyType.EC&#41;;\n System.out.printf&#40;&quot;Key is created with name %s and id %s %n&quot;, key.getName&#40;&#41;, key.getId&#40;&#41;&#41;;\n </pre>"
  parameters:
  - description: "The name of the key being created."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type of key to create. For valid values, see <xref uid=\"com.azure.security.keyvault.keys.models.KeyType\" data-throw-if-not-resolved=\"false\">KeyType</xref>."
    name: "keyType"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyType?alt=com.azure.security.keyvault.keys.models.KeyType&text=KeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultKey createKey(String name, KeyType keyType)"
  returns:
    description: "The <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\">created key</xref>."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.2.0

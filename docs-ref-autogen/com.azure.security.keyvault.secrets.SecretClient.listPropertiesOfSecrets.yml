### YamlMime:JavaMember
uid: "com.azure.security.keyvault.secrets.SecretClient.listPropertiesOfSecrets*"
fullName: "com.azure.security.keyvault.secrets.SecretClient.listPropertiesOfSecrets"
name: "listPropertiesOfSecrets"
nameWithType: "SecretClient.listPropertiesOfSecrets"
members:
- uid: "com.azure.security.keyvault.secrets.SecretClient.listPropertiesOfSecrets()"
  fullName: "com.azure.security.keyvault.secrets.SecretClient.listPropertiesOfSecrets()"
  name: "listPropertiesOfSecrets()"
  nameWithType: "SecretClient.listPropertiesOfSecrets()"
  summary: "Lists secrets in the key vault. Each <xref uid=\"SecretProperties\" data-throw-if-not-resolved=\"false\">secret</xref> returned only has its identifier and\n attributes populated. The secret values and their versions are not listed in the response.\n This operation requires the <code>secrets/list</code> permission.\n\n <p><strong>Iterate through secrets and fetch their latest value</strong></p>\n <p>The snippet below loops over each <xref uid=\"SecretProperties\" data-throw-if-not-resolved=\"false\">secret</xref> and calls\n <xref uid=\"#getSecret(String, String)\" data-throw-if-not-resolved=\"false\">getSecret(String, String)</xref>. This gets the <xref uid=\"KeyVaultSecret\" data-throw-if-not-resolved=\"false\">secret</xref> and the\n value of its latest version.</p>\n\n <pre>\n for &#40;SecretProperties secret : secretClient.listPropertiesOfSecrets&#40;&#41;&#41; &#123;\n     KeyVaultSecret secretWithValue = secretClient.getSecret&#40;secret.getName&#40;&#41;, secret.getVersion&#40;&#41;&#41;;\n     System.out.printf&#40;&quot;Received secret with name %s and value %s&quot;,\n         secretWithValue.getName&#40;&#41;, secretWithValue.getValue&#40;&#41;&#41;;\n &#125;\n </pre>\n\n <p><strong>Iterate over secrets by page</strong></p>\n <p>The snippet below loops over each <xref uid=\"SecretProperties\" data-throw-if-not-resolved=\"false\">secret</xref> by page and calls\n <xref uid=\"#getSecret(String, String)\" data-throw-if-not-resolved=\"false\">getSecret(String, String)</xref>. This gets the <xref uid=\"KeyVaultSecret\" data-throw-if-not-resolved=\"false\">secret</xref> and the\n value of its latest version.</p>\n\n <pre>\n secretClient.listPropertiesOfSecrets&#40;&#41;.iterableByPage&#40;&#41;.forEach&#40;resp -&gt; &#123;\n     System.out.printf&#40;&quot;Response headers are %s. Url %s  and status code %d %n&quot;, resp.getHeaders&#40;&#41;,\n         resp.getRequest&#40;&#41;.getUrl&#40;&#41;, resp.getStatusCode&#40;&#41;&#41;;\n     resp.getItems&#40;&#41;.forEach&#40;value -&gt; &#123;\n         KeyVaultSecret secretWithValue = secretClient.getSecret&#40;value.getName&#40;&#41;, value.getVersion&#40;&#41;&#41;;\n         System.out.printf&#40;&quot;Received secret with name %s and value %s&quot;,\n             secretWithValue.getName&#40;&#41;, secretWithValue.getValue&#40;&#41;&#41;;\n     &#125;&#41;;\n &#125;&#41;;\n </pre>"
  syntax: "public PagedIterable<SecretProperties> listPropertiesOfSecrets()"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\">PagedIterable</xref> of <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties\" data-throw-if-not-resolved=\"false\">SecretProperties</xref> of all the secrets in the vault. The\n     <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties\" data-throw-if-not-resolved=\"false\">SecretProperties</xref> contains all the information about the secret, except its value."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.secrets.models.SecretProperties?alt=com.azure.security.keyvault.secrets.models.SecretProperties&text=SecretProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.secrets.SecretClient.listPropertiesOfSecrets(com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.secrets.SecretClient.listPropertiesOfSecrets(Context context)"
  name: "listPropertiesOfSecrets(Context context)"
  nameWithType: "SecretClient.listPropertiesOfSecrets(Context context)"
  summary: "Lists secrets in the key vault. Each <xref uid=\"SecretProperties\" data-throw-if-not-resolved=\"false\">secret</xref> returned only has its identifier and\n attributes populated. The secret values and their versions are not listed in the response.\n This operation requires the <code>secrets/list</code> permission.\n\n <p><strong>Iterate over secrets and fetch their latest value</strong></p>\n <p>The snippet below loops over each <xref uid=\"SecretProperties\" data-throw-if-not-resolved=\"false\">secret</xref> and calls\n <xref uid=\"#getSecret(String, String)\" data-throw-if-not-resolved=\"false\">getSecret(String, String)</xref>. This gets the <xref uid=\"KeyVaultSecret\" data-throw-if-not-resolved=\"false\">secret</xref> and the\n value of its latest version.</p>\n <pre>\n for &#40;SecretProperties secret : secretClient.listPropertiesOfSecrets&#40;new Context&#40;key1, value2&#41;&#41;&#41; &#123;\n     KeyVaultSecret secretWithValue = secretClient.getSecret&#40;secret.getName&#40;&#41;, secret.getVersion&#40;&#41;&#41;;\n     System.out.printf&#40;&quot;Received secret with name %s and value %s&quot;,\n         secretWithValue.getName&#40;&#41;, secretWithValue.getValue&#40;&#41;&#41;;\n &#125;\n </pre>"
  parameters:
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<SecretProperties> listPropertiesOfSecrets(Context context)"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\">PagedIterable</xref> of <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties\" data-throw-if-not-resolved=\"false\">SecretProperties</xref> of all the secrets in the vault. <xref uid=\"com.azure.security.keyvault.secrets.models.SecretProperties\" data-throw-if-not-resolved=\"false\">SecretProperties</xref>\n     contains all the information about the secret, except its value."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.secrets.models.SecretProperties?alt=com.azure.security.keyvault.secrets.models.SecretProperties&text=SecretProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.secrets"
artifact: com.azure:azure-security-keyvault-secrets:4.2.0

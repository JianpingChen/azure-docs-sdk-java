### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlockBlobClient.upload*"
fullName: "com.azure.storage.blob.specialized.BlockBlobClient.upload"
name: "upload"
nameWithType: "BlockBlobClient.upload"
members:
- uid: "com.azure.storage.blob.specialized.BlockBlobClient.upload(java.io.InputStream,long)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobClient.upload(InputStream data, long length)"
  name: "upload(InputStream data, long length)"
  nameWithType: "BlockBlobClient.upload(InputStream data, long length)"
  summary: "Creates a new block blob. By default this method will not overwrite an existing blob. Updating an existing block\n blob overwrites any existing metadata on the blob. Partial updates are not supported with PutBlob; the content\n of the existing blob is overwritten with the new content. To perform a partial update of a block blob's, use\n PutBlock and PutBlockList. For more information, see the\n <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-blob\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n System.out.printf&#40;&quot;Uploaded BlockBlob MD5 is %s%n&quot;,\n     Base64.getEncoder&#40;&#41;.encodeToString&#40;client.upload&#40;data, length&#41;.getContentMd5&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider using <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient.getBlobOutputStream()\" data-throw-if-not-resolved=\"false\">#getBlobOutputStream()</xref> and writing to the returned\n OutputStream."
    name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobItem upload(InputStream data, long length)"
  returns:
    description: "The information of the uploaded block blob."
    type: "<xref href=\"com.azure.storage.blob.models.BlockBlobItem?alt=com.azure.storage.blob.models.BlockBlobItem&text=BlockBlobItem\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlockBlobClient.upload(java.io.InputStream,long,boolean)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobClient.upload(InputStream data, long length, boolean overwrite)"
  name: "upload(InputStream data, long length, boolean overwrite)"
  nameWithType: "BlockBlobClient.upload(InputStream data, long length, boolean overwrite)"
  summary: "Creates a new block blob, or updates the content of an existing block blob. Updating an existing block blob\n overwrites any existing metadata on the blob. Partial updates are not supported with PutBlob; the content of the\n existing blob is overwritten with the new content. To perform a partial update of a block blob's, use PutBlock\n and PutBlockList. For more information, see the\n <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-blob\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n boolean overwrite = false;\n System.out.printf&#40;&quot;Uploaded BlockBlob MD5 is %s%n&quot;,\n     Base64.getEncoder&#40;&#41;.encodeToString&#40;client.upload&#40;data, length, overwrite&#41;.getContentMd5&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider using <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient.getBlobOutputStream()\" data-throw-if-not-resolved=\"false\">#getBlobOutputStream()</xref> and writing to the returned OutputStream.\n Alternatively, consider wrapping your data source in a <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.io.BufferedInputStream</xref> to add mark support."
    name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not to overwrite, should data exist on the blob."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlockBlobItem upload(InputStream data, long length, boolean overwrite)"
  returns:
    description: "The information of the uploaded block blob."
    type: "<xref href=\"com.azure.storage.blob.models.BlockBlobItem?alt=com.azure.storage.blob.models.BlockBlobItem&text=BlockBlobItem\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0-beta.1

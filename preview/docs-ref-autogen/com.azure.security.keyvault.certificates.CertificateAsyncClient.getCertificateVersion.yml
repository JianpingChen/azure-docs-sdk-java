### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersion*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersion"
name: "getCertificateVersion"
nameWithType: "CertificateAsyncClient.getCertificateVersion"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersion(java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateVersion(String certificateName, String version)"
  name: "getCertificateVersion(String certificateName, String version)"
  nameWithType: "CertificateAsyncClient.getCertificateVersion(String certificateName, String version)"
  summary: "Gets information about the specified version of the specified certificate. This operation requires the certificates/get permission.\n\n <p><strong>Code Samples</strong></p>\n <p>Gets a specific version of the certificate in the key vault. Prints out the\n returned certificate details when a response has been received.</p>\n\n <pre>\n certificateAsyncClient.getCertificateVersion&#40;&quot;certificateName&quot;, certificateVersion&#41;\n     .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;\n     .subscribe&#40;certificateWithVersion -&gt;\n         System.out.printf&#40;&quot;Certificate is returned with name %s and secretId %s %n&quot;,\n             certificateWithVersion.getProperties&#40;&#41;.getName&#40;&#41;, certificateWithVersion.getSecretId&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: "The name of the certificate to retrieve, cannot be null"
    name: "certificateName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the certificate to retrieve. If this is an empty String or null then latest version of the certificate is retrieved."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<KeyVaultCertificate> getCertificateVersion(String certificateName, String version)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the requested <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate\" data-throw-if-not-resolved=\"false\">certificate</xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificate&text=KeyVaultCertificate\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.1.0-beta.3

### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.primitives.Ints.lexicographicalComparator*"
fullName: "com.azure.cosmos.implementation.guava25.primitives.Ints.lexicographicalComparator"
name: "lexicographicalComparator"
nameWithType: "Ints.lexicographicalComparator"
members:
- uid: "com.azure.cosmos.implementation.guava25.primitives.Ints.lexicographicalComparator()"
  fullName: "com.azure.cosmos.implementation.guava25.primitives.Ints.lexicographicalComparator()"
  name: "lexicographicalComparator()"
  nameWithType: "Ints.lexicographicalComparator()"
  summary: "Returns a comparator that compares two <code>int</code> arrays <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">lexicographically</a>. That is, it\n compares, using <xref uid=\"#compare(int, int)\" data-throw-if-not-resolved=\"false\">#compare(int, int)</xref>), the first pair of values that follow any common\n prefix, or when one array is a prefix of the other, treats the shorter array as the lesser. For\n example, <code>[] < [1] < [1, 2] < [2]</code>.\n\n <p>The returned comparator is inconsistent with <xref uid=\"Object#equals(Object)\" data-throw-if-not-resolved=\"false\">Object#equals(Object)</xref> (since arrays\n support only identity equality), but it is consistent with <xref uid=\"Arrays#equals(int[], int[])\" data-throw-if-not-resolved=\"false\">Arrays#equals(int[], int[])</xref>."
  syntax: "public static Comparator<int[]> lexicographicalComparator()"
  returns:
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />[]&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.primitives"
artifact: com.azure:azure-cosmos:4.3.2-beta.2

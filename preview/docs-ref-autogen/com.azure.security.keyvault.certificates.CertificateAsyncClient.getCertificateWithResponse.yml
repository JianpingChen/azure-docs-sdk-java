### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateWithResponse*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateWithResponse"
name: "getCertificateWithResponse"
nameWithType: "CertificateAsyncClient.getCertificateWithResponse"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateWithResponse(java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.getCertificateWithResponse(String certificateName)"
  name: "getCertificateWithResponse(String certificateName)"
  nameWithType: "CertificateAsyncClient.getCertificateWithResponse(String certificateName)"
  summary: "Gets information about the latest version of the specified certificate. This operation requires the certificates/get permission.\n\n <p><strong>Code Samples</strong></p>\n <p>Gets a specific version of the certificate in the key vault. Prints out the\n returned certificate details when a response has been received.</p>\n\n <pre>\n certificateAsyncClient.getCertificateWithResponse&#40;&quot;certificateName&quot;&#41;\n     .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;\n     .subscribe&#40;certificateResponse -&gt;\n         System.out.printf&#40;&quot;Certificate is returned with name %s and secretId %s %n&quot;,\n             certificateResponse.getValue&#40;&#41;.getProperties&#40;&#41;.getName&#40;&#41;,\n             certificateResponse.getValue&#40;&#41;.getSecretId&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: "The name of the certificate to retrieve, cannot be null"
    name: "certificateName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultCertificateWithPolicy>> getCertificateWithResponse(String certificateName)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\">value</xref> contains the requested <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"false\">certificate</xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy&text=KeyVaultCertificateWithPolicy\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.1.0-beta.3

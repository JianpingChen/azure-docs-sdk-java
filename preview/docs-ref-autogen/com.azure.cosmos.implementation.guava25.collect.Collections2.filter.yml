### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Collections2.filter*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Collections2.<E>filter"
name: "<E>filter"
nameWithType: "Collections2.<E>filter"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Collections2.<E>filter(java.util.Collection<E>,com.azure.cosmos.implementation.guava25.base.Predicate<? super E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Collections2.<E>filter(Collection<E> unfiltered, Predicate<? super E> predicate)"
  name: "<E>filter(Collection<E> unfiltered, Predicate<? super E> predicate)"
  nameWithType: "Collections2.<E>filter(Collection<E> unfiltered, Predicate<? super E> predicate)"
  summary: "Returns the elements of <code>unfiltered</code> that satisfy a predicate. The returned collection is\n a live view of <code>unfiltered</code>; changes to one affect the other.\n\n <p>The resulting collection's iterator does not support <code>remove()</code>, but all other\n collection methods are supported. When given an element that doesn't satisfy the predicate, the\n collection's <code>add()</code> and <code>addAll()</code> methods throw an <xref uid=\"IllegalArgumentException\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref>. When methods such as <code>removeAll()</code> and <code>clear()</code> are\n called on the filtered collection, only elements that satisfy the filter will be removed from\n the underlying collection.\n\n <p>The returned collection isn't threadsafe or serializable, even if <code>unfiltered</code> is.\n\n <p>Many of the filtered collection's methods, such as <code>size()</code>, iterate across every\n element in the underlying collection and determine which elements satisfy the filter. When a\n live view is <i>not</i> needed, it may be faster to copy <code>Iterables.filter(unfiltered,\n predicate)</code> and use the copy.\n\n <p><b>Warning:</b> <code>predicate</code> must be <i>consistent with equals</i>, as documented at\n <xref uid=\"Predicate#apply\" data-throw-if-not-resolved=\"false\">Predicate#apply</xref>. Do not provide a predicate such as <code>\n Predicates.instanceOf(ArrayList.class)</code>, which is inconsistent with equals. (See <xref uid=\"Iterables#filter(Iterable, Class)\" data-throw-if-not-resolved=\"false\">Iterables#filter(Iterable, Class)</xref> for related functionality.)\n\n <p><b><code>Stream</code> equivalent:</b> <xref uid=\"java.util.stream.Stream#filter\" data-throw-if-not-resolved=\"false\">Stream.filter</xref>."
  parameters:
  - name: "unfiltered"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "predicate"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Predicate?alt=com.azure.cosmos.implementation.guava25.base.Predicate&text=Predicate\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Collection<E> <E>filter(Collection<E> unfiltered, Predicate<? super E> predicate)"
  returns:
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.3.2-beta.2

### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse"
name: "queryWithResponse"
nameWithType: "BlobClientBase.queryWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)"
  name: "queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)"
  summary: "Queries an entire blob into an output stream.\n\n <p>For more information, see the\n <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents\">Azure Docs</a></p>\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n ByteArrayOutputStream queryData = new ByteArrayOutputStream&#40;&#41;;\n String expression = &quot;SELECT * from BlobStorage&quot;;\n BlobQueryJsonSerialization input = new BlobQueryJsonSerialization&#40;&#41;\n     .setRecordSeparator&#40;'&#92;n'&#41;;\n BlobQueryDelimitedSerialization output = new BlobQueryDelimitedSerialization&#40;&#41;\n     .setEscapeChar&#40;'&#92;0'&#41;\n     .setColumnSeparator&#40;','&#41;\n     .setRecordSeparator&#40;'&#92;n'&#41;\n     .setFieldQuote&#40;'&#92;''&#41;\n     .setHeadersPresent&#40;true&#41;;\n BlobRequestConditions requestConditions = new BlobRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;\n Consumer&lt;BlobQueryError&gt; errorConsumer = System.out::println;\n Consumer&lt;BlobQueryProgress&gt; progressConsumer = progress -&gt; System.out.println&#40;&quot;total blob bytes read: &quot;\n     + progress.getBytesScanned&#40;&#41;&#41;;\n BlobQueryOptions queryOptions = new BlobQueryOptions&#40;expression, queryData&#41;\n     .setInputSerialization&#40;input&#41;\n     .setOutputSerialization&#40;output&#41;\n     .setRequestConditions&#40;requestConditions&#41;\n     .setErrorConsumer&#40;errorConsumer&#41;\n     .setProgressConsumer&#40;progressConsumer&#41;;\n System.out.printf&#40;&quot;Query completed with status %d%n&quot;,\n     client.queryWithResponse&#40;queryOptions, timeout, new Context&#40;key1, value1&#41;&#41;\n         .getStatusCode&#40;&#41;&#41;;\n </pre>"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobQueryOptions\" data-throw-if-not-resolved=\"false\">The query options</xref>."
    name: "queryOptions"
    type: "<xref href=\"com.azure.storage.blob.options.BlobQueryOptions?alt=com.azure.storage.blob.options.BlobQueryOptions&text=BlobQueryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobQueryResponse queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.storage.blob.models.BlobQueryResponse?alt=com.azure.storage.blob.models.BlobQueryResponse&text=BlobQueryResponse\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0-beta.1

### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.primitives.Booleans.lexicographicalComparator*"
fullName: "com.azure.cosmos.implementation.guava25.primitives.Booleans.lexicographicalComparator"
name: "lexicographicalComparator"
nameWithType: "Booleans.lexicographicalComparator"
members:
- uid: "com.azure.cosmos.implementation.guava25.primitives.Booleans.lexicographicalComparator()"
  fullName: "com.azure.cosmos.implementation.guava25.primitives.Booleans.lexicographicalComparator()"
  name: "lexicographicalComparator()"
  nameWithType: "Booleans.lexicographicalComparator()"
  summary: "Returns a comparator that compares two <code>boolean</code> arrays <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">lexicographically</a>. That is, it\n compares, using <xref uid=\"#compare(boolean, boolean)\" data-throw-if-not-resolved=\"false\">#compare(boolean, boolean)</xref>), the first pair of values that follow any\n common prefix, or when one array is a prefix of the other, treats the shorter array as the\n lesser. For example, <code>[] < [false] < [false, true] < [true]</code>.\n\n <p>The returned comparator is inconsistent with <xref uid=\"Object#equals(Object)\" data-throw-if-not-resolved=\"false\">Object#equals(Object)</xref> (since arrays\n support only identity equality), but it is consistent with <xref uid=\"Arrays#equals(boolean[],\n boolean[])\" data-throw-if-not-resolved=\"false\">Arrays#equals(boolean[],\n boolean[])</xref>."
  syntax: "public static Comparator<boolean[]> lexicographicalComparator()"
  returns:
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />[]&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.primitives"
artifact: com.azure:azure-cosmos:4.3.2-beta.2

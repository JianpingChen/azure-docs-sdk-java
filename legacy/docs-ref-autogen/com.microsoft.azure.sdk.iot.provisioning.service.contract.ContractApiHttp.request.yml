### YamlMime:JavaMember
nameWithType: ContractApiHttp.request
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
  name: request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
  nameWithType: ContractApiHttp.request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
  parameters:
  - description: <p>is the http verb in the request (GET, POST, PUT, DELETE, PATCH). </p>
    name: httpMethod
    type: <xref href="com.microsoft.azure.sdk.iot.deps.transport.http.HttpMethod?alt=com.microsoft.azure.sdk.iot.deps.transport.http.HttpMethod&text=HttpMethod" data-throw-if-not-resolved="False"/>
  - description: <p>is the path to the resource in the service that will compose the URL. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>is a list of pairs key values that contains optional parameters in the http header. </p>
    name: headerParameters
    type: <xref href="Map%3CString%2C+String%3E?alt=Map<String, String>&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - description: <p>is the body of the message. </p>
    name: payload
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - name: 637b6540
  - name: 407b0ee3
  - name: 3c87bd19
  returns:
    description: >-
      <p>the<code>HttpResponseÂ 

          </code> that contains the response of the request. </p>
    type: synchronized <xref href="com.microsoft.azure.sdk.iot.deps.transport.http.HttpResponse?alt=com.microsoft.azure.sdk.iot.deps.transport.http.HttpResponse&text=HttpResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This function sends a raw information to the Device Provisioning Service service using http protocol. </p>

    <p>The purpose of this function is be the base communication between the controllers and the Service, and should be used only if you have full understanding of the Device Provisioning Service rest APIs. We highly recommend that you uses the APis under <b><xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient" data-throw-if-not-resolved="false">ProvisioningServiceClient</xref></b> instead of directly access the rest API using this class. </p>

    <p></p>
  syntax: public synchronized HttpResponse request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request(HttpMethod,String,Map<String, String>,String)
uid: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request*
fullName: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
name: request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
package: com.microsoft.azure.sdk.iot.provisioning.service.contract
metadata: {}

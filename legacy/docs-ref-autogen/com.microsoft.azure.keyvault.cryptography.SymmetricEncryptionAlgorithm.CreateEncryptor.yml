### YamlMime:JavaMember
nameWithType: SymmetricEncryptionAlgorithm.CreateEncryptor
type: method
members:
- fullName: com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  name: CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  nameWithType: SymmetricEncryptionAlgorithm.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  parameters:
  - description: <p>The key material to be used. </p>
    name: key
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The initialization vector to be used. </p>
    name: iv
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The authentication data to be used with authenticating encryption algorithms (ignored for non-authenticating algorithms) </p>
    name: authenticationData
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  exceptions:
  - name: e333ca4f
  - name: 456eb9d1
  - name: 5ef34f89
  - name: 2093b65f
  returns:
    description: <p>A <xref uid="com.microsoft.azure.keyvault.cryptography.ICryptoTransform" data-throw-if-not-resolved="false">com.microsoft.azure.keyvault.cryptography.ICryptoTransform</xref> implementation </p>
    type: abstract <xref href="com.microsoft.azure.keyvault.cryptography.ICryptoTransform?alt=com.microsoft.azure.keyvault.cryptography.ICryptoTransform&text=ICryptoTransform" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a <xref uid="com.microsoft.azure.keyvault.cryptography.ICryptoTransform" data-throw-if-not-resolved="false">com.microsoft.azure.keyvault.cryptography.ICryptoTransform</xref> implementation for encryption using the supplied initialization vector and the specific provider for the Java Security API. </p>
  syntax: public abstract ICryptoTransform CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  uid: com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(byte [],byte [],byte [])
- fullName: com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  name: CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  nameWithType: SymmetricEncryptionAlgorithm.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  parameters:
  - description: <p>The key material to be used. </p>
    name: key
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The initialization vector to be used. </p>
    name: iv
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The authentication data to be used with authenticating encryption algorithms (ignored for non-authenticating algorithms) </p>
    name: authenticationData
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The provider to use. </p>
    name: provider
    type: <xref href="Provider?alt=Provider&text=Provider" data-throw-if-not-resolved="False"/>
  exceptions:
  - name: e333ca4f
  - name: 456eb9d1
  - name: 5ef34f89
  - name: 2093b65f
  returns:
    description: <p>A <xref uid="com.microsoft.azure.keyvault.cryptography.ICryptoTransform" data-throw-if-not-resolved="false">com.microsoft.azure.keyvault.cryptography.ICryptoTransform</xref> implementation </p>
    type: abstract <xref href="com.microsoft.azure.keyvault.cryptography.ICryptoTransform?alt=com.microsoft.azure.keyvault.cryptography.ICryptoTransform&text=ICryptoTransform" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a <xref uid="com.microsoft.azure.keyvault.cryptography.ICryptoTransform" data-throw-if-not-resolved="false">com.microsoft.azure.keyvault.cryptography.ICryptoTransform</xref> implementation for encryption using the supplied initialization vector and the specific provider for the Java Security API. </p>
  syntax: public abstract ICryptoTransform CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  uid: com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(byte [],byte [],byte [],Provider)
uid: com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor*
fullName: com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
name: CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
package: com.microsoft.azure.keyvault.cryptography
metadata: {}

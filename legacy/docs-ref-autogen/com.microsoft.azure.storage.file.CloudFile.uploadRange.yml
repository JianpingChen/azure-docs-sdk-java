### YamlMime:JavaMember
nameWithType: CloudFile.uploadRange
type: method
members:
- fullName: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length)
  name: uploadRange(final InputStream sourceStream, final long offset, final long length)
  nameWithType: CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false">InputStream</xref> object which represents the input stream to write to the file. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. </p>
    name: offset
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the data to write.</p>
    name: length
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  exceptions:
  - name: cbf33bbe
  - name: ca4f407a
  - name: "44102508"
  summary: >-
    <p>Uploads a range to a file.</p>

    <p></p>
  syntax: public void uploadRange(final InputStream sourceStream, final long offset, final long length)
  uid: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream,final long,final long)
- fullName: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  name: uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false">InputStream</xref> object which represents the input stream to write to the file. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the offset, in number of bytes, at which to begin writing the data. </p>
    name: offset
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the data to write. </p>
    name: length
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref> object which represents the access conditions for the file. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.file.FileRequestOptions" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file.CloudFileClient" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.file.FileRequestOptions?alt=com.microsoft.azure.storage.file.FileRequestOptions&text=FileRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - name: cbf33bbe
  - name: ca4f407a
  - name: "44102508"
  summary: >-
    <p>Uploads a range to a file using the specified lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public void uploadRange(final InputStream sourceStream, final long offset, final long length, final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream,final long,final long,final AccessCondition,FileRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.file.CloudFile.uploadRange*
fullName: com.microsoft.azure.storage.file.CloudFile.uploadRange(final InputStream sourceStream, final long offset, final long length)
name: uploadRange(final InputStream sourceStream, final long offset, final long length)
package: com.microsoft.azure.storage.file
metadata: {}

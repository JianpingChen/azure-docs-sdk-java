### YamlMime:JavaMember
nameWithType: Files.listFromTask
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId)
  name: listFromTask(final String jobId, final String taskId)
  nameWithType: Files.listFromTask(final String jobId, final String taskId)
  parameters:
  - description: <p>The ID of the job that contains the task. </p>
    name: jobId
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task whose files you want to list. </p>
    name: taskId
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - name: 3c87bd19
  - name: c8683d81
  - name: 9b2a4515
  returns:
    description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFromTask(final String jobId, final String taskId)
  uid: com.microsoft.azure.batch.protocol.Files.listFromTask(final String,final String)
- fullName: com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  nameWithType: Files.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  parameters:
  - description: <p>The ID of the job that contains the task. </p>
    name: jobId
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task whose files you want to list. </p>
    name: taskId
    type: <xref href="final+String?alt=final String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to list children of the task directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    name: recursive
    type: <xref href="final+Boolean?alt=final Boolean&text=final+Boolean" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileListFromTaskOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions?alt=com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions&text=FileListFromTaskOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - name: 3c87bd19
  - name: c8683d81
  - name: 9b2a4515
  returns:
    description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.NodeFile?alt=com.microsoft.azure.batch.protocol.models.NodeFile&text=NodeFile" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax: public PagedList<NodeFile> listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  uid: com.microsoft.azure.batch.protocol.Files.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
uid: com.microsoft.azure.batch.protocol.Files.listFromTask*
fullName: com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId)
name: listFromTask(final String jobId, final String taskId)
package: com.microsoft.azure.batch.protocol
metadata: {}
